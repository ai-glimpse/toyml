[tool.poetry]
name = "toyml"
version = "0.2.0"
description = "ToyML: Machine Learning from Scratch"
license = "LGPL v3"
authors = ["Xiangzhuang Shen <datahonor@gmail.com>"]
readme = "README.md"
homepage = "https://shenxiangzhuang.github.io/ToyML"
repository = "https://github.com/shenxiangzhuang/ToyML"
keywords=[
    "machine learning",
    "statistics",
    "engineering",
]
classifiers=[
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Hydrology",
    "Topic :: Scientific/Engineering :: Mathematics",
]
packages = [
    { include = "toyml", from = "." }
]
include = [
    "LICENSE",
    "README.md",
]


[tool.poetry.dependencies]
python = "^3.8"
tqdm = {version = "^4.0.0", optional = true}

[tool.poetry.extras]
full = ["tqdm"]

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.20.0"

[tool.poetry.group.lint.dependencies]
black = "^22.8.0"
pylint = "^2.15.3"
flake8 = "^5.0.4"
mypy = "^0.981"
isort = "^5.10.1"

[tool.poetry.group.test.dependencies]
pytest = "^7.1.3"
pytest-cov = "^4.0.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.0"
mkdocs-material = "^8.5.3"
mkdocs-material-extensions = "^1.0.3"

[[tool.poetry.source]]
name = "tsinghua"
url = "https://pypi.tuna.tsinghua.edu.cn/simple"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Development tool configuration

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
lines_between_types = 1

[tool.pylint.'MASTER']
fail-under = 8.0

[tool.pylint.'MESSAGES CONTROL']
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "too-few-public-methods",
    "useless-super-delegation",
]

[tool.pylint.'FORMAT']
max-line-length = 88

[tool.pytest.ini_options]
# TODO: change cov percent from 0 to 90
addopts = "-v --cov=toyml --cov-fail-under 0 --cov-report=term --cov-report=xml --cov-report=html"
testpaths = [
    "tests",
]

[tool.coverage.run]
omit = [
    "./toyml/utils/*",  # TODO: remove from omit
]

[tool.coverage.report]
exclude_lines = [
    'pragma: no cover',
    'raise AssertionError',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
    'def __repr__',
]
fail_under = 90
precision = 1
skip_empty = true
sort = "-Cover"
